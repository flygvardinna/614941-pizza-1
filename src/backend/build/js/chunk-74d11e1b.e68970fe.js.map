{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./src/store/mocks/index.js","webpack:///./node_modules/core-js/modules/es.object.entries.js","webpack:///./node_modules/core-js/internals/object-to-array.js","webpack:///./src/views/__tests__/Login.spec.js"],"names":["_arrayWithHoles","arr","Array","isArray","_iterableToArrayLimit","i","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","length","err","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","initState","notifications","generateMockStore","actions","modulesCopy","cloneDeep","modules","Object","entries","forEach","module","Vuex","Store","state","mutations","plugins","VuexPlugins","setPizzaItems","store","commit","SET_ENTITY","entity","id","name","doughId","sauceId","sizeId","ingredients","ingredientId","quantity","price","setAddresses","userId","street","building","flat","comment","setOrders","phone","addressId","orderAddress","orderMisc","miscId","orderId","orderPizzas","pizzaId","setUser","user","$","$entries","target","stat","O","DESCRIPTORS","uncurryThis","objectKeys","toIndexedObject","$propertyIsEnumerable","f","propertyIsEnumerable","createMethod","TO_ENTRIES","it","key","keys","result","exports","values","localVue","createLocalVue","use","describe","wrapper","mocks","$router","jest","fn","createComponent","options","mount","LoginView","beforeEach","Auth","login","afterEach","destroy","closeBtn","find","trigger","expect","toHaveBeenCalledWith","spyValidateFields","spyOn","vm","spyLogin","toHaveBeenCalled","not","emailInput","passInput","element"],"mappings":"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","file":"js/chunk-74d11e1b.e68970fe.js","sourcesContent":["export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { cloneDeep } from \"lodash\";\n\nimport { mutations } from \"@/store\";\nimport modules from \"@/store/modules\";\nimport Vuex from \"vuex\";\nimport VuexPlugins from \"@/plugins/vuexPlugins\";\nimport { SET_ENTITY } from \"@/store/mutation-types\";\nimport pizzaData from \"@/static/pizza.json\";\nimport miscData from \"@/static/misc.json\";\nimport user from \"@/static/user\";\nimport { normalizeAdditionalItems } from \"@/common/helpers\";\n\nconst initState = () => ({\n  notifications: [],\n});\n\nexport const generateMockStore = (actions) => {\n  const modulesCopy = cloneDeep(modules);\n  if (actions) {\n    Object.entries(actions).forEach(([module, actions]) => {\n      modulesCopy[module] = { ...modulesCopy[module], actions };\n    });\n  }\n\n  return new Vuex.Store({\n    state: initState(),\n    mutations,\n    modules: modulesCopy,\n    plugins: [VuexPlugins],\n  });\n};\n\nexport const setDough = (store) => {\n  store.commit(SET_ENTITY, {\n    module: \"Builder\",\n    entity: \"dough\",\n    value: pizzaData.dough.map((dough, index) => {\n      return {\n        ...dough,\n        value: \"light\",\n        isChecked: index === 0,\n      };\n    }),\n  });\n};\n\nexport const setSizes = (store) => {\n  store.commit(SET_ENTITY, {\n    module: \"Builder\",\n    entity: \"sizes\",\n    value: pizzaData.sizes.map((size, index) => {\n      return {\n        ...size,\n        value: \"small\",\n        isChecked: index === 0,\n      };\n    }),\n  });\n};\n\nexport const setSauces = (store) => {\n  store.commit(SET_ENTITY, {\n    module: \"Builder\",\n    entity: \"sauces\",\n    value: pizzaData.sauces.map((sauce, index) => {\n      return {\n        ...sauce,\n        value: \"tomato\",\n        isChecked: index === 0,\n      };\n    }),\n  });\n};\n\nexport const setIngredients = (store) => {\n  store.commit(SET_ENTITY, {\n    module: \"Builder\",\n    entity: \"ingredients\",\n    value: pizzaData.ingredients.map((ingredient) => {\n      return {\n        ...ingredient,\n        value: \"mushrooms\",\n        quantity: 0,\n      };\n    }),\n  });\n};\n\nexport const setPizzaName = (store) => {\n  store.commit(SET_ENTITY, {\n    module: \"Builder\",\n    entity: \"pizzaName\",\n    value: \"testPizzaName\",\n  });\n};\n\nexport const setPizzaItems = (store) => {\n  store.commit(SET_ENTITY, {\n    module: \"Cart\",\n    entity: \"pizzaItems\",\n    value: [\n      {\n        id: \"1\",\n        name: \"Pizza name\",\n        doughId: 1,\n        sauceId: 1,\n        sizeId: 1,\n        ingredients: [\n          { ingredientId: 1, quantity: 1 },\n          { ingredientId: 2, quantity: 1 },\n        ],\n        price: 545,\n        quantity: 1,\n      },\n    ],\n  });\n};\n\nexport const setAdditionalItems = (store) => {\n  store.commit(SET_ENTITY, {\n    module: \"Cart\",\n    entity: \"additionalItems\",\n    value: miscData.map((item) => normalizeAdditionalItems(item)),\n  });\n};\n\nexport const setAddresses = (store) => {\n  store.commit(SET_ENTITY, {\n    module: \"Addresses\",\n    entity: \"addresses\",\n    value: [\n      {\n        id: 1,\n        name: \"Домик\",\n        userId: \"1\",\n        street: \"Зеленая\",\n        building: \"1\",\n        flat: \"1\",\n        comment: \"Не звоните\",\n      },\n    ],\n  });\n};\n\nexport const setOrders = (store) => {\n  store.commit(SET_ENTITY, {\n    module: \"Orders\",\n    entity: \"orders\",\n    value: [\n      {\n        id: 1,\n        userId: \"1\",\n        phone: \"+777 777 777\",\n        addressId: 1,\n        orderAddress: {\n          id: 1,\n          name: \"Домик\",\n          userId: \"1\",\n          street: \"Зеленая\",\n          building: \"1\",\n          flat: \"1\",\n          comment: \"\",\n        },\n        orderMisc: [{ id: 1, miscId: 1, orderId: 1, quantity: 0 }],\n        orderPizzas: [\n          {\n            id: 1,\n            name: \"Pizza name\",\n            doughId: 1,\n            sauceId: 1,\n            sizeId: 1,\n            ingredients: [\n              { id: 1, ingredientId: 1, pizzaId: 1, quantity: 1 },\n              { id: 2, ingredientId: 2, pizzaId: 1, quantity: 1 },\n            ],\n            quantity: 1,\n            orderId: 1,\n          },\n        ],\n      },\n    ],\n  });\n};\n\nexport const setUser = (store) => {\n  store.commit(SET_ENTITY, {\n    module: \"Auth\",\n    entity: \"user\",\n    value: user,\n  });\n};\n","var $ = require('../internals/export');\nvar $entries = require('../internals/object-to-array').entries;\n\n// `Object.entries` method\n// https://tc39.es/ecma262/#sec-object.entries\n$({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar $propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\nvar propertyIsEnumerable = uncurryThis($propertyIsEnumerable);\nvar push = uncurryThis([].push);\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable(O, key)) {\n        push(result, TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.es/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.es/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n","import { mount, createLocalVue } from \"@vue/test-utils\";\nimport { generateMockStore } from \"@/store/mocks\";\nimport Vuex from \"vuex\";\nimport LoginView from \"@/views/index/^Login\";\n\nconst localVue = createLocalVue();\nlocalVue.use(Vuex);\n\ndescribe(\"LoginView\", () => {\n  const mocks = {\n    $router: {\n      push: jest.fn(),\n    },\n  };\n\n  let actions;\n  let store;\n  let wrapper;\n  const createComponent = (options) => {\n    wrapper = mount(LoginView, options);\n  };\n\n  beforeEach(() => {\n    actions = {\n      Auth: {\n        login: jest.fn(),\n      },\n    };\n\n    store = generateMockStore(actions);\n  });\n\n  afterEach(() => {\n    wrapper.destroy();\n  });\n\n  it(\"redirects to index page on close button click\", async () => {\n    createComponent({ localVue, store, mocks });\n    const closeBtn = wrapper.find('[data-test=\"close-button\"]');\n    await closeBtn.trigger(\"click\");\n    expect(mocks.$router.push).toHaveBeenCalledWith(\"/\");\n  });\n\n  it(\"validation mixin has been called on form submit, invalid form isn't submitted\", async () => {\n    createComponent({ localVue, store, mocks });\n    const spyValidateFields = jest.spyOn(wrapper.vm, \"$validateFields\");\n    const spyLogin = jest.spyOn(wrapper.vm, \"login\");\n    await wrapper.find(\"form\").trigger(\"submit\");\n    expect(spyValidateFields).toHaveBeenCalled();\n    expect(spyLogin).not.toHaveBeenCalled();\n  });\n\n  it(\"calls login and redirects to index page if credentials are valid\", async () => {\n    createComponent({ localVue, store, mocks });\n    const emailInput = wrapper.find('input[name=\"email\"]');\n    const passInput = wrapper.find('input[name=\"pass\"]');\n    const spyLogin = jest.spyOn(wrapper.vm, \"login\");\n\n    emailInput.element.value = \"test@gmail.com\";\n    await emailInput.trigger(\"input\");\n    passInput.element.value = \"123456\";\n    await passInput.trigger(\"input\");\n\n    await wrapper.find(\"form\").trigger(\"submit\");\n    expect(spyLogin).toHaveBeenCalled();\n    expect(mocks.$router.push).toHaveBeenCalledWith(\"/\");\n  });\n});\n"],"sourceRoot":""}